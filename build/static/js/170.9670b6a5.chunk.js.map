{"version":3,"file":"static/js/170.9670b6a5.chunk.js","mappings":"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","sources":["components/Button.js","components/forms/CreateAccountForm.js","services/loginService.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst Button = ({ text, type, onClick, className, style, disabled }) => {\r\n  return (\r\n    <button\r\n      type={type}\r\n      className={className}\r\n      onClick={onClick}\r\n      style={style}\r\n      disabled={disabled}\r\n    >{text}</button>\r\n  )\r\n}\r\n\r\nexport default Button","import React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowRight, faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik'\r\nimport { useLanguage } from '../../hooks/useLanguage'\r\nimport { useDispatch } from 'react-redux'\r\nimport { login } from '../../reducers/loginReducer'\r\nimport Select from 'react-select'\r\nimport Button from '../Button'\r\nimport userService from '../../services/userService'\r\nimport loginService from '../../services/loginService'\r\n\r\nconst CreateAccountForm = ({ closeModal }) => {\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [showNextPage, setShowNextPage] = useState(false)\r\n  const dispatch = useDispatch()\r\n  const texts = useLanguage()\r\n\r\n  const initialValues = {\r\n    firstName: '',\r\n    lastName: '',\r\n    birthYear: '',\r\n    username: '',\r\n    password: '',\r\n    passwordConf: '',\r\n    medInput: '',\r\n    height: '',\r\n    weight: '',\r\n    medList: []\r\n  }\r\n\r\n  const onSubmit = async values => {\r\n    try {      \r\n      await userService.create(values)\r\n      const user = await loginService.login({ username: values.username, password: values.password })\r\n      dispatch(login(user))\r\n      setErrorMessage(null)\r\n      closeModal()\r\n    } catch (exception) {\r\n      setErrorMessage(\r\n        `${texts.forms.createAccount.err.nameTaken[0]}${values.username}${texts.forms.createAccount.err.nameTaken[1]}`)\r\n    }\r\n  }\r\n\r\n  // Error validation for Formik. All fields of the form are run through, and if empty, added to 'errors' object\r\n  const validate = values => {\r\n    const errors = {}\r\n    const notValidated = ['medList', 'medInput', 'medSelect', 'height', 'weight']\r\n    \r\n    for (let value in values) {\r\n      // !values[value] indicates an empty field. Checking this disables errors in real time.\r\n      if (!notValidated.includes(value) && !values[value]) errors[value] = texts.forms.err.empty\r\n    }\r\n\r\n    if (values.password !== '' && values.password.length < 6) {\r\n      errors.password = texts.forms.createAccount.err.pwdShort\r\n    }\r\n\r\n    if (values.password !== values.passwordConf) {\r\n      errors.passwordConf = texts.forms.createAccount.err.pwdConf\r\n    }\r\n    \r\n    return errors\r\n  }\r\n\r\n  const optionsBirthYear = () => {\r\n    const options = []\r\n    options.push(<option label={texts.forms.createAccount.birthSelect} key='default' ></option>)\r\n    const yearNow = new Date().getFullYear()\r\n\r\n    for (let i = yearNow; i >= 1900; i--) {\r\n      options.push(<option value={i} key={i}>{i}</option>)\r\n    }\r\n    return options\r\n  }\r\n\r\n  const addMedicine = (props) => {\r\n    if (props.values.medInput !== '') {\r\n      const medName = props.values.medInput\r\n        .substring(0, 1)\r\n        .toUpperCase()\r\n        .concat(props.values.medInput.substring(1))\r\n      props.setFieldValue('medList', [...props.values.medList, medName])\r\n      props.setFieldValue('medInput', '')\r\n    }     \r\n  }\r\n\r\n  // Styles for both parts of the form. When page changes, another set of fields is shown.\r\n  const first = { display: showNextPage ? 'none' : '' }\r\n  const second = { display: showNextPage ? '' : 'none' }\r\n\r\n  // To apply styles, component prop for ErrorMessage is needed\r\n  return (\r\n    <Formik \r\n      initialValues={initialValues}\r\n      onSubmit={onSubmit}\r\n      validate={validate}\r\n    >\r\n      {(props) =>\r\n        <Form className='form'>\r\n          <div style={first}>\r\n            <div>\r\n              <label htmlFor='firstName'>{texts.forms.createAccount.first}</label>\r\n              <Field className='formField' type='text' id='firstName' name='firstName' autoFocus/>\r\n              <ErrorMessage name='firstName' component='div' className='formik_error'/>\r\n            </div>\r\n            <div>\r\n              <label htmlFor='lastName'>{texts.forms.createAccount.last}</label>\r\n              <Field className='formField' type='text' id='lastName' name='lastName' />\r\n              <ErrorMessage name='lastName' component='div' className='formik_error'/>\r\n            </div>\r\n            <div>\r\n              <label htmlFor='birthYear'>{texts.forms.createAccount.birth}</label>\r\n              <Field className='formField' as='select' id='birthYear' name='birthYear'>\r\n                {optionsBirthYear()}\r\n              </Field>\r\n              <ErrorMessage name='birthYear' component='div' className='formik_error'/>\r\n            </div>\r\n            <div>\r\n              <label htmlFor='username'>{texts.forms.createAccount.user}</label>\r\n              <Field className='formField' type='text' id='username' name='username' />\r\n              <ErrorMessage name='username' component='div' className='formik_error'/>\r\n            </div>\r\n            <div>\r\n              <label htmlFor='password'>{texts.forms.createAccount.pwd}</label>\r\n              <Field className='formField' type='password' id='password' name='password' />\r\n              <ErrorMessage name='password' component='div' className='formik_error'/>\r\n            </div>\r\n            <div>\r\n              <label htmlFor='passwordConf'>{texts.forms.createAccount.pwdConf}</label>\r\n              <Field className='formField' type='password' id='passwordConf' name='passwordConf' />\r\n              <ErrorMessage name='passwordConf' component='div' className='formik_error'/>\r\n            </div>\r\n            <div className='flex-cont' style={{ padding: 0,  justifyContent: 'flex-end' }} onClick={() => {\r\n              // Validation executed when advancing to next page. Fields containing errors are manually \r\n              // set touched; otherwise Formik won't register the errors.\r\n              props.validateForm()\r\n                .then(errors => {\r\n                  const possibleErrors = Object.keys(errors) \r\n                  if (possibleErrors.length === 0) {\r\n                    setShowNextPage(!showNextPage)\r\n                  } else {\r\n                    console.log('touched: ', props.touched)\r\n                    props.setTouched({ /*...props.touched,*/ ...errors })\r\n                  }                  \r\n                })                              \r\n            }}><div className='icon-div'><FontAwesomeIcon icon={faArrowRight}/></div>\r\n            </div>\r\n          </div>\r\n          <div style={second}>            \r\n            <div className='flex-cont' style={{ padding: 0, justifyContent: 'flex-start' }} onClick={() => setShowNextPage(!showNextPage)}>\r\n              <div className='icon-div'><FontAwesomeIcon icon={faArrowLeft}/></div>\r\n            </div>\r\n            <div>\r\n              <label htmlFor='height'>{texts.forms.createAccount.height}</label>\r\n              <Field className='formField' type='number' id='height' name='height'/>\r\n            </div>\r\n            <div>\r\n              <label htmlFor='weight'>{texts.forms.createAccount.weight}</label>\r\n              <Field className='formField' type='number' id='weight' name='weight'/>\r\n            </div>\r\n            <div className='instruction'>\r\n              <p><i>{texts.forms.createAccount.instr}</i></p>              \r\n            </div>\r\n            <div>\r\n              <label htmlFor='medList'>{texts.forms.createAccount.medList}</label>\r\n              <Field\r\n                placeholder={texts.forms.createAccount.medListPlaceholder}\r\n                onKeyPress={e => {\r\n                  if (e.which === 13) {\r\n                    e.preventDefault()\r\n                    addMedicine(props)\r\n                  }\r\n                }}\r\n                name='medInput'\r\n              />\r\n              <Button\r\n                style={{ marginLeft: '1em',  }}\r\n                className='util-btn'\r\n                type='button'\r\n                text={texts.forms.createAccount.add}\r\n                disabled={props.values.medInput === '' ? true : false}\r\n                onClick={() => addMedicine(props)}\r\n              />\r\n              <Field\r\n                className='formField medSelect'\r\n                placeholder={texts.forms.select.placeHolder}\r\n                component={Select}\r\n                name='medSelect'\r\n                isMulti\r\n                value={props.values.medList.map(med => { return { value: med, label: med } })}\r\n                onChange={data => {\r\n                  if (window.confirm(texts.forms.createAccount.remConf)) {\r\n                    props.setFieldValue('medList', data.map(obj => obj.value))\r\n                  }\r\n                }}\r\n                onClick={({ target }) => {\r\n                  props.setFieldValue('medSelect', target.value)}\r\n                }\r\n              />          \r\n            </div>              \r\n            <Button className='button' text={texts.forms.createAccount.submit} type='submit' disabled={!showNextPage && true} />\r\n            {errorMessage && <div name='credentials' component='div' className='formik_error'>{errorMessage}</div>}\r\n          </div>\r\n        </Form>\r\n      }      \r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default CreateAccountForm\r\n\r\n/* Entinen medlist\r\n\r\n<div>\r\n              <label htmlFor='medList'>MEDICINE LIST:</label>\r\n              <Field\r\n                placeholder='Medicine name'\r\n                onKeyPress={e => {\r\n                  if (e.which === 13) {\r\n                    e.preventDefault()\r\n                    addMedicine(props)\r\n                  }\r\n                }}\r\n                name='medInput'\r\n              />\r\n              <Button\r\n                style={{ marginLeft: '1em' }}\r\n                className='util-btn'\r\n                type='button'\r\n                text='ADD'\r\n                disabled={props.values.medInput === '' ? true : false}\r\n                onClick={() => addMedicine(props)}\r\n              />\r\n              <Field\r\n                className='formField'\r\n                as='select'\r\n                size='5'\r\n                name='medSelect'\r\n                onClick={({ target }) => {\r\n                  props.setFieldValue('medSelect', target.value)}\r\n                }\r\n              >\r\n                {props.values.medList.map((m, i) => <option key={i}>{m}</option>)}\r\n              </Field>\r\n              <Button\r\n                className='util-btn'\r\n                type='button'\r\n                text='REMOVE'\r\n                disabled={props.values.medSelect === undefined ? true : false}\r\n                onClick={() => {\r\n                  props.setFieldValue('medList', props.values.medList.filter(m => {\r\n                    return m !== props.values.medSelect\r\n                  }))\r\n                  props.setFieldValue('medSelect', undefined)\r\n                  console.log(props.values.medSelect)\r\n                }}\r\n              />\r\n            </div>\r\n            */","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n  const user = await axios.post(baseUrl, credentials)\r\n  return user.data\r\n}\r\n\r\nconst checkToken = async (token) => {\r\n  const response = await axios.post(`${baseUrl}/checkToken`, { token })\r\n  return response.data\r\n}\r\n\r\nexport default { login, checkToken }"],"names":["text","type","onClick","className","style","disabled","closeModal","errorMessage","setErrorMessage","useState","showNextPage","setShowNextPage","dispatch","useDispatch","texts","useLanguage","optionsBirthYear","options","push","label","forms","createAccount","birthSelect","i","Date","getFullYear","value","addMedicine","props","values","medInput","medName","substring","toUpperCase","concat","setFieldValue","medList","first","display","second","initialValues","firstName","lastName","birthYear","username","password","passwordConf","height","weight","onSubmit","async","userService","user","loginService","login","exception","err","nameTaken","validate","errors","notValidated","includes","empty","length","pwdShort","pwdConf","htmlFor","id","name","autoFocus","component","last","birth","as","pwd","padding","justifyContent","validateForm","then","Object","keys","console","log","touched","setTouched","icon","faArrowRight","faArrowLeft","instr","placeholder","medListPlaceholder","onKeyPress","e","which","preventDefault","marginLeft","add","select","placeHolder","Select","isMulti","map","med","onChange","data","window","confirm","remConf","obj","target","submit","baseUrl","axios","credentials","checkToken","token"],"sourceRoot":""}