{"version":3,"file":"static/js/741.4fbe16db.chunk.js","mappings":"kJACA,MAAMA,GAAgBC,EAAAA,EAAAA,OAAK,IAAM,yEAC3BC,GAAoBD,EAAAA,EAAAA,OAAK,IAAM,iEAC/BE,GAAYF,EAAAA,EAAAA,OAAK,IAAM,wDAEvBG,EAAQC,EAAAA,YAAiB,CAAEC,EAAOC,KACtC,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,OAClCG,EAAeC,IAAoBJ,EAAAA,EAAAA,UAAS,MAiB7CK,EAAmB,CAACJ,EAAUK,KAC9BA,GAAQF,EAAiBE,GAC7BJ,EAAYD,GACZF,GAAWQ,IAASA,GAApB,EAGIC,EAAa,KACjBH,IACAH,EAAY,GAAZ,EAQF,OALAO,EAAAA,EAAAA,qBAAoBZ,GAAK,KAChB,CAAEQ,mBAAkBG,kBAK3B,gBAAKE,UAAU,QAAQC,MAAO,CAAEC,QAASd,EAAU,GAAK,QAAxD,UACE,iBAAKY,UAAU,gBAAf,UACGT,IAAY,gBAAKS,UAAU,cAAcG,QAAS,IAAML,IAA5C,kBAlCGL,KACpB,OAAQF,GACR,IAAK,eACH,OAAO,SAACX,EAAD,CAAekB,WAAYA,IACpC,IAAK,eACH,OAAO,SAAClB,EAAD,CAAekB,WAAYA,EAAYL,cAAeA,IAC/D,IAAK,gBACH,OAAO,SAACX,EAAD,CAAmBgB,WAAYA,IACxC,IAAK,QACH,OAAO,SAACf,EAAD,CAAWe,WAAYA,IAChC,QACE,OAAO,KAVT,EAkCKM,CAAaX,OAJpB,IAUFT,EAAMqB,YAAc,QACpB,S","sources":["components/Modal.js"],"sourcesContent":["import React, { useState, useImperativeHandle, lazy } from 'react'\r\nconst NewRecordForm = lazy(() => import('../components/forms/NewRecordForm'))\r\nconst CreateAccountForm = lazy(() => import('../components/forms/CreateAccountForm'))\r\nconst LoginForm = lazy(() => import('../components/forms/LoginForm'))\r\n\r\nconst Modal = React.forwardRef(( props, ref ) => {\r\n  const [visible, setVisible] = useState(false)\r\n  const [formType, setFormType] = useState(null)\r\n  const [initialValues, setInitialValues] = useState(null)\r\n\r\n  const formToRender = (initialValues) => {\r\n    switch (formType) {\r\n    case 'createRecord':\r\n      return <NewRecordForm closeModal={closeModal} />\r\n    case 'modifyRecord':\r\n      return <NewRecordForm closeModal={closeModal} initialValues={initialValues} />\r\n    case 'createAccount':\r\n      return <CreateAccountForm closeModal={closeModal} />\r\n    case 'login':\r\n      return <LoginForm closeModal={closeModal} />\r\n    default:\r\n      return null\r\n    }\r\n  }\r\n\r\n  const toggleVisibility = (formType, values) => {\r\n    if (values) setInitialValues(values)\r\n    setFormType(formType)\r\n    setVisible(prev => !prev)\r\n  }\r\n  \r\n  const closeModal = () => {\r\n    toggleVisibility()\r\n    setFormType('')\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return { toggleVisibility, closeModal }\r\n  })\r\n  \r\n  // If formType isn't specified, a confirm dialog is opened, and closing button isn't shown.\r\n  return (\r\n    <div className='modal' style={{ display: visible ? '' : 'none'}}>\r\n      <div className='modal-content'>\r\n        {formType && <div className='close-modal' onClick={() => closeModal()}>&times;</div>}\r\n        {formToRender(initialValues)}\r\n      </div>      \r\n    </div>\r\n  )\r\n})\r\n\r\nModal.displayName = 'Modal'\r\nexport default Modal"],"names":["NewRecordForm","lazy","CreateAccountForm","LoginForm","Modal","React","props","ref","visible","setVisible","useState","formType","setFormType","initialValues","setInitialValues","toggleVisibility","values","prev","closeModal","useImperativeHandle","className","style","display","onClick","formToRender","displayName"],"sourceRoot":""}